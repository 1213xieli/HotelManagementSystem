<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jiudian.manage.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.jiudian.manage.model.User" >
    <id column="userid" property="userid" jdbcType="INTEGER" />
    <result column="useraccount" property="useraccount" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="power" property="power" jdbcType="INTEGER" />
    <result column="IDnumber" property="idnumber" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    userid, useraccount, password, username, age, power, IDnumber, money
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userid = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where userid = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jiudian.manage.model.User" >
    insert into user (userid, useraccount, password, 
      username, age, power, 
      IDnumber, money)
    values (#{userid,jdbcType=INTEGER}, #{useraccount,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{power,jdbcType=INTEGER}, 
      #{idnumber,jdbcType=VARCHAR}, #{money,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.jiudian.manage.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="useraccount != null" >
        useraccount,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="power != null" >
        power,
      </if>
      <if test="idnumber != null" >
        IDnumber,
      </if>
      <if test="money != null" >
        money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="useraccount != null" >
        #{useraccount,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="power != null" >
        #{power,jdbcType=INTEGER},
      </if>
      <if test="idnumber != null" >
        #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jiudian.manage.model.User" >
    update user
    <set >
      <if test="useraccount != null" >
        useraccount = #{useraccount,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="power != null" >
        power = #{power,jdbcType=INTEGER},
      </if>
      <if test="idnumber != null" >
        IDnumber = #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiudian.manage.model.User" >
    update user
    set useraccount = #{useraccount,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      power = #{power,jdbcType=INTEGER},
      IDnumber = #{idnumber,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE}
    where userid = #{userid,jdbcType=INTEGER}
  </update>
</mapper>